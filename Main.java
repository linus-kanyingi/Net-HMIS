/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package com.mycompany.hmis;

import com.toedter.calendar.JDateChooser;
import java.awt.Component;
import java.awt.HeadlessException;
import java.sql.Date;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.text.SimpleDateFormat;
import java.util.Calendar;
import java.util.GregorianCalendar;
import javax.swing.JOptionPane;
import net.proteanit.sql.DbUtils;
import javax.swing.ButtonGroup;
import javax.swing.JRadioButton;
import java.util.Calendar;
import java.time.LocalDate;
import java.time.Period;
import java.time.ZoneId;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.sql.Connection;
import java.text.SimpleDateFormat;
import java.util.Calendar;
import java.util.Random;
import javax.swing.JCheckBox;
//import java.util.Date;



/**
 *
 * @author user
 */
public class Main extends javax.swing.JFrame {

    /**
     * Creates new form Main
     */
      public void setPersonaText(String username) {
        persona_txt.setText(username);
    }
      
    public Main() {
        initComponents();
        showData();
        currentDate();
        this.setLocationRelativeTo(null);
        
          // Create the button group
        ButtonGroup buttonGroup = new ButtonGroup();

        // Access the existing radio buttons from your JFrame
        JRadioButton radioButton1 = getjRadioButton1();
        JRadioButton radioButton2 = getjRadioButton2();
        JCheckBox radioButton3 = gender_male();
        JCheckBox radioButton4 = gender_female();
        

        // Add the radio buttons to the button group
        buttonGroup.add(radioButton1);
        buttonGroup.add(radioButton2);
         buttonGroup.add(radioButton3);
        buttonGroup.add(radioButton4);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    
    
      // Method to retrieve the first JRadioButton component
    public JRadioButton getjRadioButton1() {
        return jRadioButton1;
    }

    // Method to retrieve the second JRadioButton component
    public JRadioButton getjRadioButton2() {
        return jRadioButton2;
    }
    public JCheckBox gender_male() {
        return gender_male;
    }
    public JCheckBox gender_female() {
        return gender_female;
    }
    
    
     public void showData(){
        try{
            Class.forName("org.postgresql.Driver");
            java.sql.Connection conn = DriverManager.getConnection("jdbc:postgresql://localhost:5432/postgres","postgres","kanyingi254");
            Statement st = conn.createStatement();
            String query = "select * from patient_details";
            ResultSet rs = st.executeQuery(query);
            register_report.setModel(DbUtils.resultSetToTableModel(rs));
            conn.close();
        }catch(Exception ex){
            JOptionPane.showMessageDialog(this, ex);
        }
    }
     
     public void currentDate(){
         
         Calendar cal = new GregorianCalendar();
         int month = cal.get(Calendar.MONTH);
         int year = cal.get(Calendar.YEAR);
         int day = cal.get(Calendar.DAY_OF_MONTH);
         
         date_txt.setText(day+"/"+ (month+1)+"/"+year);
         
         int second = cal.get(Calendar.SECOND);
         int minute = cal.get(Calendar.MINUTE);
         int hour = cal.get(Calendar.HOUR);
         
         time_txt.setText(hour+"."+(minute)+"."+second);
         
            
     }
     
     

    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        jPanel3 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        pat_no_txt = new javax.swing.JTextPane();
        jScrollPane3 = new javax.swing.JScrollPane();
        phone_txt = new javax.swing.JTextPane();
        jScrollPane4 = new javax.swing.JScrollPane();
        pat_name_txt = new javax.swing.JTextPane();
        jPanel5 = new javax.swing.JPanel();
        gender_male = new javax.swing.JCheckBox();
        gender_female = new javax.swing.JCheckBox();
        jPanel6 = new javax.swing.JPanel();
        dob_txt = new com.toedter.calendar.JDateChooser();
        age_txt = new javax.swing.JTextField();
        jScrollPane5 = new javax.swing.JScrollPane();
        id_txt = new javax.swing.JTextPane();
        jPanel4 = new javax.swing.JPanel();
        jScrollPane7 = new javax.swing.JScrollPane();
        home_txt = new javax.swing.JTextPane();
        clinic_txt = new javax.swing.JComboBox<>();
        jPanel7 = new javax.swing.JPanel();
        jScrollPane8 = new javax.swing.JScrollPane();
        nok_no_txt = new javax.swing.JTextPane();
        nok = new javax.swing.JCheckBox();
        samaritan = new javax.swing.JCheckBox();
        jScrollPane9 = new javax.swing.JScrollPane();
        nok_name_txt = new javax.swing.JTextPane();
        jPanel8 = new javax.swing.JPanel();
        urgency = new javax.swing.JComboBox<>();
        jLabel1 = new javax.swing.JLabel();
        jTextField2 = new javax.swing.JTextField();
        pay_mode_cb = new javax.swing.JComboBox<>();
        date_txt = new javax.swing.JLabel();
        time_txt = new javax.swing.JLabel();
        jPanel12 = new javax.swing.JPanel();
        jRadioButton1 = new javax.swing.JRadioButton();
        jRadioButton2 = new javax.swing.JRadioButton();
        jPanel9 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        register_report = new javax.swing.JTable();
        jPanel10 = new javax.swing.JPanel();
        jDateChooser1 = new com.toedter.calendar.JDateChooser();
        jDateChooser2 = new com.toedter.calendar.JDateChooser();
        jButton4 = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jPanel11 = new javax.swing.JPanel();
        persona_txt = new javax.swing.JLabel();
        db_connection_status = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu6 = new javax.swing.JMenu();
        jMenu7 = new javax.swing.JMenu();
        jMenuItem8 = new javax.swing.JMenuItem();
        jMenuItem9 = new javax.swing.JMenuItem();
        jMenu8 = new javax.swing.JMenu();
        jMenuItem7 = new javax.swing.JMenuItem();
        jMenu9 = new javax.swing.JMenu();
        jMenu10 = new javax.swing.JMenu();
        jMenu1 = new javax.swing.JMenu();
        jMenuItem2 = new javax.swing.JMenuItem();
        jMenu2 = new javax.swing.JMenu();
        jMenuItem1 = new javax.swing.JMenuItem();
        jMenu3 = new javax.swing.JMenu();
        jMenuItem3 = new javax.swing.JMenuItem();
        jMenuItem4 = new javax.swing.JMenuItem();
        jMenu4 = new javax.swing.JMenu();
        jMenuItem6 = new javax.swing.JMenuItem();
        jMenu11 = new javax.swing.JMenu();
        jMenuItem10 = new javax.swing.JMenuItem();
        jMenu5 = new javax.swing.JMenu();
        jMenuItem5 = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(new java.awt.GridBagLayout());

        jPanel1.setLayout(new java.awt.GridBagLayout());

        jPanel3.setLayout(new java.awt.GridBagLayout());

        pat_no_txt.setBorder(javax.swing.BorderFactory.createTitledBorder("NHIF NO"));
        jScrollPane2.setViewportView(pat_no_txt);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridwidth = 7;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 10, 0, 10);
        jPanel3.add(jScrollPane2, gridBagConstraints);

        phone_txt.setBorder(javax.swing.BorderFactory.createTitledBorder("Phone"));
        jScrollPane3.setViewportView(phone_txt);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.gridwidth = 7;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 10, 0, 10);
        jPanel3.add(jScrollPane3, gridBagConstraints);

        pat_name_txt.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createTitledBorder("Name")));
        jScrollPane4.setViewportView(pat_name_txt);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.gridwidth = 7;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 10, 0, 10);
        jPanel3.add(jScrollPane4, gridBagConstraints);

        jPanel5.setBorder(javax.swing.BorderFactory.createTitledBorder("Gender"));
        jPanel5.setLayout(new java.awt.GridBagLayout());

        gender_male.setText("Male");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 10, 0, 0);
        jPanel5.add(gender_male, gridBagConstraints);

        gender_female.setText("Female");
        gender_female.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                gender_femaleActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 10, 0, 0);
        jPanel5.add(gender_female, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.gridwidth = 7;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel3.add(jPanel5, gridBagConstraints);

        jPanel6.setBorder(javax.swing.BorderFactory.createTitledBorder("Age"));
        jPanel6.setLayout(new java.awt.GridBagLayout());
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 10, 0, 5);
        jPanel6.add(dob_txt, gridBagConstraints);

        age_txt.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                age_txtMouseReleased(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 5, 0, 10);
        jPanel6.add(age_txt, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 8;
        gridBagConstraints.gridwidth = 7;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel3.add(jPanel6, gridBagConstraints);

        id_txt.setBorder(javax.swing.BorderFactory.createTitledBorder("I.D"));
        jScrollPane5.setViewportView(id_txt);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 10;
        gridBagConstraints.gridwidth = 7;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 10, 0, 10);
        jPanel3.add(jScrollPane5, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel1.add(jPanel3, gridBagConstraints);

        jPanel4.setLayout(new java.awt.GridBagLayout());

        home_txt.setBorder(javax.swing.BorderFactory.createTitledBorder("Home Residence"));
        jScrollPane7.setViewportView(home_txt);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridwidth = 7;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 10, 0, 10);
        jPanel4.add(jScrollPane7, gridBagConstraints);

        clinic_txt.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Select Clinic", "Out Patient Department", "Laboratory" }));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.gridwidth = 7;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 10, 0, 10);
        jPanel4.add(clinic_txt, gridBagConstraints);

        jPanel7.setBorder(javax.swing.BorderFactory.createTitledBorder("Next Of Kin (N.O.K Details)"));
        jPanel7.setLayout(new java.awt.GridBagLayout());

        nok_no_txt.setBorder(javax.swing.BorderFactory.createTitledBorder("Nok Number"));
        jScrollPane8.setViewportView(nok_no_txt);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.gridwidth = 7;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 10, 0, 10);
        jPanel7.add(jScrollPane8, gridBagConstraints);

        nok.setText("NOK");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel7.add(nok, gridBagConstraints);

        samaritan.setText("Good Samaritan");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel7.add(samaritan, gridBagConstraints);

        nok_name_txt.setBorder(javax.swing.BorderFactory.createTitledBorder("Nok Name"));
        jScrollPane9.setViewportView(nok_name_txt);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.gridwidth = 7;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 10, 0, 10);
        jPanel7.add(jScrollPane9, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.gridwidth = 7;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel4.add(jPanel7, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel1.add(jPanel4, gridBagConstraints);

        jPanel8.setLayout(new java.awt.GridBagLayout());

        urgency.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Select Urgency", "Normal", "Urgent", "Emergency" }));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 10, 0, 10);
        jPanel8.add(urgency, gridBagConstraints);

        jLabel1.setText("Payment Mode");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 10);
        jPanel8.add(jLabel1, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 10, 0, 0);
        jPanel8.add(jTextField2, gridBagConstraints);

        pay_mode_cb.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "-", "Cash", "NHIF" }));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 5;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 5, 0, 0);
        jPanel8.add(pay_mode_cb, gridBagConstraints);

        date_txt.setBorder(javax.swing.BorderFactory.createTitledBorder("Date"));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 10, 0, 10);
        jPanel8.add(date_txt, gridBagConstraints);

        time_txt.setBorder(javax.swing.BorderFactory.createTitledBorder("Time"));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 5;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 10, 0, 10);
        jPanel8.add(time_txt, gridBagConstraints);

        jPanel12.setLayout(new java.awt.GridBagLayout());

        jRadioButton1.setText("New");
        jRadioButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioButton1ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 10, 0, 0);
        jPanel12.add(jRadioButton1, gridBagConstraints);

        jRadioButton2.setText("Revisit");
        jRadioButton2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jRadioButton2MouseClicked(evt);
            }
        });
        jRadioButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioButton2ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel12.add(jRadioButton2, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel8.add(jPanel12, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel1.add(jPanel8, gridBagConstraints);

        jTabbedPane1.addTab("Patient Bio Data", jPanel1);

        jPanel9.setLayout(new java.awt.GridBagLayout());

        register_report.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null}
            },
            new String [] {
                "Patient No", "Patient Name", "Gender", "Age", "ID", "Residence", "Clinic", "State", "Phone"
            }
        ));
        jScrollPane1.setViewportView(register_report);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel9.add(jScrollPane1, gridBagConstraints);

        jPanel10.setLayout(new java.awt.GridBagLayout());
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 10, 0, 0);
        jPanel10.add(jDateChooser1, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 10, 0, 10);
        jPanel10.add(jDateChooser2, gridBagConstraints);

        jButton4.setText("Refresh");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 10);
        jPanel10.add(jButton4, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel9.add(jPanel10, gridBagConstraints);

        jTabbedPane1.addTab("Report of Registered Patients", jPanel9);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        getContentPane().add(jTabbedPane1, gridBagConstraints);

        jPanel2.setLayout(new java.awt.GridBagLayout());

        jButton1.setText("Edit Patient File");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel2.add(jButton1, gridBagConstraints);

        jButton2.setText("Close Form");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel2.add(jButton2, gridBagConstraints);

        jButton3.setText("Save Data");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel2.add(jButton3, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        getContentPane().add(jPanel2, gridBagConstraints);

        jPanel11.setLayout(new java.awt.GridBagLayout());
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 10);
        jPanel11.add(persona_txt, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 10, 0, 10);
        jPanel11.add(db_connection_status, gridBagConstraints);

        jLabel2.setText("Login User :");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 10, 0, 0);
        jPanel11.add(jLabel2, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        getContentPane().add(jPanel11, gridBagConstraints);

        jMenu6.setText("Setup");

        jMenu7.setText("Staff Registry");

        jMenuItem8.setText("Add User");
        jMenuItem8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem8ActionPerformed(evt);
            }
        });
        jMenu7.add(jMenuItem8);

        jMenuItem9.setText("Edit User");
        jMenu7.add(jMenuItem9);

        jMenu6.add(jMenu7);

        jMenu8.setText("Operating Parameters");
        jMenu8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenu8ActionPerformed(evt);
            }
        });

        jMenuItem7.setText("Pharmacy");
        jMenuItem7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem7ActionPerformed(evt);
            }
        });
        jMenu8.add(jMenuItem7);

        jMenu9.setText("Laboratory");
        jMenu8.add(jMenu9);

        jMenu6.add(jMenu8);

        jMenu10.setText("Exit");
        jMenu6.add(jMenu10);

        jMenuBar1.add(jMenu6);

        jMenu1.setText("Registration");

        jMenuItem2.setText("Out Patient Registration");
        jMenuItem2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem2ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem2);

        jMenuBar1.add(jMenu1);

        jMenu2.setText("Nursing");

        jMenuItem1.setText("Nursing Center");
        jMenuItem1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem1ActionPerformed(evt);
            }
        });
        jMenu2.add(jMenuItem1);

        jMenuBar1.add(jMenu2);

        jMenu3.setText("Clinical");

        jMenuItem3.setText("Clerking");
        jMenuItem3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem3ActionPerformed(evt);
            }
        });
        jMenu3.add(jMenuItem3);

        jMenuItem4.setText("Eye");
        jMenu3.add(jMenuItem4);

        jMenuBar1.add(jMenu3);

        jMenu4.setText("Laboratory");

        jMenuItem6.setText("Laboratory LIMS");
        jMenu4.add(jMenuItem6);

        jMenuBar1.add(jMenu4);

        jMenu11.setText("Billing");

        jMenuItem10.setText("Cash Sale POS");
        jMenuItem10.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem10ActionPerformed(evt);
            }
        });
        jMenu11.add(jMenuItem10);

        jMenuBar1.add(jMenu11);

        jMenu5.setText("Reports");

        jMenuItem5.setText("Patient Card");
        jMenu5.add(jMenuItem5);

        jMenuBar1.add(jMenu5);

        setJMenuBar(jMenuBar1);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jMenuItem1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem1ActionPerformed
        // TODO add your handling code here:
        dispose();
        new Nursing().setVisible(true);
    }//GEN-LAST:event_jMenuItem1ActionPerformed

    private void jMenuItem2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem2ActionPerformed
        // TODO add your handling code here:
        Clerking rgf = new Clerking();
        rgf.setVisible(true);
                    
        
    }//GEN-LAST:event_jMenuItem2ActionPerformed

    private void gender_femaleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_gender_femaleActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_gender_femaleActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
            try {
        Class.forName("org.postgresql.Driver");
        Connection conn = DriverManager.getConnection("jdbc:postgresql://localhost:5432/postgres", "postgres", "kanyingi254");

        // Generate pat_no
        String pat_no = generatePatNo();

        // Check if pat_no is still null or empty
        if (pat_no == null || pat_no.isEmpty()) {
            JOptionPane.showMessageDialog(null, "Failed to generate a valid pat_no");
            return; // Exit the method to prevent further execution
        }

        String name = pat_name_txt.getText();
        if (name.isEmpty()) {
            JOptionPane.showMessageDialog(null, "Please enter a name");
            return; // Exit the method to prevent further execution
        }

        // Get the selected gender
        String gender;
        if (gender_male.isSelected()) {
            gender = "Male";
        } else if (gender_female.isSelected()) {
            gender = "Female";
        } else {
            JOptionPane.showMessageDialog(null, "Please select a gender");
            return; // Exit the method to prevent further execution
        }


        java.util.Date dob = dob_txt.getDate();
        if (dob == null) {
            JOptionPane.showMessageDialog(null, "Please select a valid date of birth");
            return; // Exit the method to prevent further execution
        }

        Calendar dobCalendar = Calendar.getInstance();
        dobCalendar.setTime(dob);
        int age = calculateAge(dobCalendar, Calendar.getInstance());
        if (age == -1) {
            JOptionPane.showMessageDialog(null, "Invalid age");
            return; // Exit the method to prevent further execution
        }

        String id = id_txt.getText();
        String residence = home_txt.getText();
        String clinic = clinic_txt.getSelectedItem().toString();
        String kin = nok_name_txt.getText();
        String nok_phone = nok_no_txt.getText();
        String state = urgency.getSelectedItem().toString();
        String phone = phone_txt.getText();
        String scheme_no = pat_no_txt.getText(); // Use pat_no_txt field as scheme_no
        String pay_mode = pay_mode_cb.getSelectedItem().toString(); // Use selected value from pay_mode_cb as pay_mode
        String date = date_txt.getText(); // Use date_txt field as date
        String time = time_txt.getText(); // Use time_txt field as time
        String user = persona_txt.getText(); // Use persona_txt JLabel as user

        // Calculate age by subtracting dob from the current date
        // Update age_txt with the calculated age
        age_txt.setText(Integer.toString(age));
        
         // Additional validation checks
        if (pay_mode.equals("-")) {
            JOptionPane.showMessageDialog(null, "Please select a valid pay mode");
            return; // Exit the method to prevent further execution
        }

        if (state.equals("Select Urgency")) {
            JOptionPane.showMessageDialog(null, "Please select a valid urgency");
            return; // Exit the method to prevent further execution
        }

        if (clinic.equals("Select Clinic")) {
            JOptionPane.showMessageDialog(null, "Please select a valid clinic");
            return; // Exit the method to prevent further execution
        }


        // Insert the patient details into the database
        // ...
        String query = "INSERT INTO public.patient_details (pat_no, pat_name, gender, age, id_no, residence, clinic, nok_name, nok_phone, pat_state, phone, scheme_no, pay_mode, date, time, dob, \"user\") " +
                "VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)";

        PreparedStatement pst = conn.prepareStatement(query);
        pst.setString(1, pat_no);
        pst.setString(2, name);
        pst.setString(3, gender);
        pst.setInt(4, age);
        pst.setString(5, id);
        pst.setString(6, residence);
        pst.setString(7, clinic);
        pst.setString(8, kin);
        pst.setString(9, nok_phone);
        pst.setString(10, state);
        pst.setString(11, phone);
        pst.setString(12, scheme_no);
        pst.setString(13, pay_mode);
        pst.setString(14, date);
        pst.setString(15, time);
        pst.setDate(16, new java.sql.Date(dob.getTime()));
        pst.setString(17, user);
        pst.execute();
        // ...


        // Save the dob value into the 'dob' column
       PreparedStatement dobPst = conn.prepareStatement("UPDATE public.patient_details SET dob = to_date(?, 'DD/MM/YYYY') WHERE pat_no = ?");
       SimpleDateFormat dateFormat = new SimpleDateFormat("dd/MM/yyyy");
       dobPst.setString(1, dateFormat.format(dob));
       dobPst.setString(2, pat_no);
       dobPst.execute();


        JOptionPane.showMessageDialog(null, "Inserted successfully");
        register_report.show();
        
                // Clear the input fields
        pat_name_txt.setText("");
        gender_male.setSelected(true); // Reset gender selection to Male
        dob_txt.setDate(null);
        id_txt.setText("");
        home_txt.setText("");
        clinic_txt.setSelectedIndex(0); // Reset clinic selection to the first item
        nok_name_txt.setText("");
        nok_no_txt.setText("");
        urgency.setSelectedIndex(0); // Reset state selection to the first item
        phone_txt.setText("");
        pat_no_txt.setText("");
        pay_mode_cb.setSelectedIndex(0); // Reset pay mode selection to the first item
        date_txt.setText("");
        time_txt.setText("");
        persona_txt.setText("");
        age_txt.setText("");
    } catch (HeadlessException | ClassNotFoundException | SQLException ex) {
        JOptionPane.showMessageDialog(null, ex);
    }
    }//GEN-LAST:event_jButton3ActionPerformed

    private String generatePatNo() {
    String patNo;
    do {
        patNo = generateRandomPatNo(); // Generate a random pat_no
    } while (patNo == null || patNo.isEmpty());

    return patNo;
}



private String generateRandomPatNo() {
    Random rand = new Random();

    Calendar calendar = Calendar.getInstance();
    int year = calendar.get(Calendar.YEAR) % 100; // Get the last two digits of the year

    int part2 = rand.nextInt(1000000); // Generate a random number between 0 and 999999

    String patNo = String.format("OP-%02d-%06d", year, part2);

    return patNo;
}



    
  private int calculateAge(Calendar dob, Calendar currentDate) {
    if (dob == null || currentDate == null) {
        return -1; // Return a default value indicating an invalid age
    }

    int age = currentDate.get(Calendar.YEAR) - dob.get(Calendar.YEAR);
    if (currentDate.get(Calendar.MONTH) < dob.get(Calendar.MONTH) ||
            (currentDate.get(Calendar.MONTH) == dob.get(Calendar.MONTH) &&
                    currentDate.get(Calendar.DAY_OF_MONTH) < dob.get(Calendar.DAY_OF_MONTH))) {
        age--;
    }
    return age;
}



    private void jMenuItem3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem3ActionPerformed
        // TODO add your handling code here:
        dispose();
        new Clerking().setVisible(true);
    }//GEN-LAST:event_jMenuItem3ActionPerformed

    private void jMenu8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenu8ActionPerformed
        // TODO add your handling code here:
        dispose();
        new parameter_lab().setVisible(true);
    }//GEN-LAST:event_jMenu8ActionPerformed

    private void jMenuItem7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem7ActionPerformed
        // TODO add your handling code here:
        dispose();
        new Register_pharms().setVisible(true);
    }//GEN-LAST:event_jMenuItem7ActionPerformed

    private void jMenuItem8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem8ActionPerformed
        // TODO add your handling code here:
        dispose();
        new register_user().setVisible(true);
    }//GEN-LAST:event_jMenuItem8ActionPerformed

    private void jRadioButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioButton2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jRadioButton2ActionPerformed

    private void jRadioButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioButton1ActionPerformed
        // TODO add your handling code here:
        if (jRadioButton1.isSelected()) {
        // Enable components in jPanel3
        for (Component component : jPanel1.getComponents()) {
            component.setEnabled(true);
        }
        
        // Enable components in jPanel3
        for (Component component : jPanel3.getComponents()) {
            component.setEnabled(true);
        }

        // Enable components in jPanel4
        for (Component component : jPanel4.getComponents()) {
            component.setEnabled(true);
        }
    }
    }//GEN-LAST:event_jRadioButton1ActionPerformed

    private void jRadioButton2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jRadioButton2MouseClicked
        // TODO add your handling code here:
         if (jRadioButton2.isSelected()) {
             // Disable components in jPanel3
        for (Component component : jPanel1.getComponents()) {
            component.setEnabled(false);
        }
        // Disable components in jPanel3
        for (Component component : jPanel3.getComponents()) {
            component.setEnabled(false);
        }

        // Disable components in jPanel4
        for (Component component : jPanel4.getComponents()) {
            component.setEnabled(false);
        }

        // Clear text fields or perform any other required actions
        pat_no_txt.setText("");
        pat_name_txt.setText("");
        gender_male.setSelected(false);
        gender_female.setSelected(false);
        phone_txt.setText("");
        age_txt.setText("");
        id_txt.setText("");
        home_txt.setText("");
        clinic_txt.setSelectedItem("");
        nok_name_txt.setText("");
        nok_no_txt.setText("");
        
    }
    }//GEN-LAST:event_jRadioButton2MouseClicked

    private void age_txtMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_age_txtMouseReleased
        // TODO add your handling code here:
            // Get the entered age from age_txt JTextField
                String ageString = age_txt.getText().trim(); // Trim any leading or trailing whitespace

    if (!ageString.isEmpty()) {
        try {
            // Parse the age string to an integer
            int age = Integer.parseInt(ageString);

            // Get the current date
            Calendar calendar = Calendar.getInstance();
            Date currentDate = new Date(calendar.getTime().getTime()); // Convert to java.sql.Date

            // Subtract the entered age from the current date
            calendar.add(Calendar.YEAR, -age);
            Date dateOfBirth = new Date(calendar.getTime().getTime()); // Convert to java.sql.Date

            // Set the calculated date of birth on dob_txt
            dob_txt.setDate(dateOfBirth);
        } catch (NumberFormatException e) {
            // Handle the case where the age input is not a valid integer
            // Display an error message or perform any necessary actions
        }
    }
    }//GEN-LAST:event_age_txtMouseReleased

    private void jMenuItem10ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem10ActionPerformed
        // TODO add your handling code here:
        dispose();
        new Billing().setVisible(true);
    }//GEN-LAST:event_jMenuItem10ActionPerformed

    /**
     * @param args the command line arguments
     * 
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Main().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField age_txt;
    private javax.swing.JComboBox<String> clinic_txt;
    private javax.swing.JLabel date_txt;
    private javax.swing.JLabel db_connection_status;
    private com.toedter.calendar.JDateChooser dob_txt;
    private javax.swing.JCheckBox gender_female;
    private javax.swing.JCheckBox gender_male;
    private javax.swing.JTextPane home_txt;
    private javax.swing.JTextPane id_txt;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private com.toedter.calendar.JDateChooser jDateChooser1;
    private com.toedter.calendar.JDateChooser jDateChooser2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu10;
    private javax.swing.JMenu jMenu11;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenu jMenu3;
    private javax.swing.JMenu jMenu4;
    private javax.swing.JMenu jMenu5;
    private javax.swing.JMenu jMenu6;
    private javax.swing.JMenu jMenu7;
    private javax.swing.JMenu jMenu8;
    private javax.swing.JMenu jMenu9;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JMenuItem jMenuItem10;
    private javax.swing.JMenuItem jMenuItem2;
    private javax.swing.JMenuItem jMenuItem3;
    private javax.swing.JMenuItem jMenuItem4;
    private javax.swing.JMenuItem jMenuItem5;
    private javax.swing.JMenuItem jMenuItem6;
    private javax.swing.JMenuItem jMenuItem7;
    private javax.swing.JMenuItem jMenuItem8;
    private javax.swing.JMenuItem jMenuItem9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel10;
    private javax.swing.JPanel jPanel11;
    private javax.swing.JPanel jPanel12;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JPanel jPanel9;
    private javax.swing.JRadioButton jRadioButton1;
    private javax.swing.JRadioButton jRadioButton2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JScrollPane jScrollPane7;
    private javax.swing.JScrollPane jScrollPane8;
    private javax.swing.JScrollPane jScrollPane9;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTextField jTextField2;
    private javax.swing.JCheckBox nok;
    private javax.swing.JTextPane nok_name_txt;
    private javax.swing.JTextPane nok_no_txt;
    private javax.swing.JTextPane pat_name_txt;
    private javax.swing.JTextPane pat_no_txt;
    private javax.swing.JComboBox<String> pay_mode_cb;
    private javax.swing.JLabel persona_txt;
    private javax.swing.JTextPane phone_txt;
    private javax.swing.JTable register_report;
    private javax.swing.JCheckBox samaritan;
    private javax.swing.JLabel time_txt;
    private javax.swing.JComboBox<String> urgency;
    // End of variables declaration//GEN-END:variables

    
}
